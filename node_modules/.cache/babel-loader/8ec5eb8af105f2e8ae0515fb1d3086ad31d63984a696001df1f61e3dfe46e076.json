{"ast":null,"code":"export default {\n  data() {\n    return {\n      isScrolled: false,\n      isNavbarOpen: false\n    };\n  },\n  computed: {\n    getName: function () {\n      return this.$route.name;\n    }\n  },\n  methods: {\n    handleScroll() {\n      if (window.scrollY > 50) {\n        this.isScrolled = true;\n      } else {\n        this.isScrolled = false;\n      }\n    },\n    toggleNavbar() {\n      this.isNavbarOpen = !this.isNavbarOpen;\n    },\n    clickOutside() {\n      this.isNavbarOpen = false;\n    }\n  },\n  directives: {\n    scroll: {\n      inserted: (el, binding) => {\n        window.addEventListener(\"scroll\", binding.value);\n      },\n      unbind: (el, binding) => {\n        window.removeEventListener(\"scroll\", binding.value);\n      }\n    },\n    out_click: {\n      bind: (el, binding, vnode) => {\n        el.clickOutsideEvent = function (event) {\n          if (!(el == event.target || el.contains(event.target))) {\n            vnode.context[binding.expression](event);\n          }\n        };\n        document.body.addEventListener(\"click\", el.clickOutsideEvent);\n      },\n      unbind: el => {\n        document.body.removeEventListener(\"click\", el.clickOutsideEvent);\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","isScrolled","isNavbarOpen","computed","getName","$route","name","methods","handleScroll","window","scrollY","toggleNavbar","clickOutside","directives","scroll","inserted","el","binding","addEventListener","value","unbind","removeEventListener","out_click","bind","vnode","clickOutsideEvent","event","target","contains","context","expression","document","body"],"sources":["src/layout/AppHeader.vue"],"sourcesContent":["<template>\r\n  <header\r\n    class=\"sticky-top navigation\"\r\n    v-scroll=\"handleScroll\"\r\n    v-out_click=\"clickOutside\"\r\n    :class=\"{ 'nav-bg': isScrolled }\"\r\n  >\r\n    <div class=\"container\">\r\n      <nav class=\"navbar navbar-expand-lg bg-transparent\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand d-1\" href=\"#\">Guide ENI</a>\r\n          <button\r\n            class=\"navbar-toggler border-0\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarScroll\"\r\n            aria-controls=\"navbarScroll\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n            @click=\"toggleNavbar\"\r\n          >\r\n            <i class=\"ti-align-right h4 text-dark\"></i>\r\n          </button>\r\n          <div\r\n            class=\"collapse navbar-collapse text-center\"\r\n            :class=\"{ show: isNavbarOpen }\"\r\n            id=\"navbarScroll\"\r\n          >\r\n            <ul class=\"navbar-nav mx-auto my-2 my-lg-0 navbar-nav-scroll\">\r\n              <li class=\"nav-item\">\r\n                <router-link to=\"/\"\r\n                  ><span\r\n                    class=\"nav-link pb-2\"\r\n                    :class=\"getName == 'home' && 'nav-active'\"\r\n                    >Guide</span\r\n                  ></router-link\r\n                >\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <router-link to=\"/Services/0\"\r\n                  ><span\r\n                    class=\"nav-link\"\r\n                    :class=\"getName == 'services' && 'nav-active'\"\r\n                    >Services</span\r\n                  ></router-link\r\n                >\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <router-link class=\"nav-link\" to=\"#2\">Link</router-link>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <router-link class=\"nav-link\" to=\"#2\">Link</router-link>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <router-link class=\"nav-link\" to=\"#2\">Link</router-link>\r\n              </li>\r\n            </ul>\r\n            <router-link v-if=\"getName === 'SignIn'\" to=\"/Sign/Up\">\r\n              <span class=\"btn btn-outline-primary mx-lg-4 mb-5 mb-lg-0\"\r\n                >Sign Up</span\r\n              >\r\n            </router-link>\r\n            <router-link v-else to=\"/Sign/Up\">\r\n              <span class=\"btn btn-outline-primary mx-lg-4 mb-5 mb-lg-0\"\r\n                >S'Inscrire</span\r\n              >\r\n            </router-link>\r\n            <!-- <button class=\"btn btn-primary\" type=\"submit\">SignIn</button> -->\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  </header>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      isScrolled: false,\r\n      isNavbarOpen: false,\r\n    };\r\n  },\r\n  computed: {\r\n    getName: function () {\r\n      return this.$route.name;\r\n    },\r\n  },\r\n  methods: {\r\n    handleScroll() {\r\n      if (window.scrollY > 50) {\r\n        this.isScrolled = true;\r\n      } else {\r\n        this.isScrolled = false;\r\n      }\r\n    },\r\n    toggleNavbar() {\r\n      this.isNavbarOpen = !this.isNavbarOpen;\r\n    },\r\n    clickOutside() {\r\n      this.isNavbarOpen = false;\r\n    },\r\n  },\r\n  directives: {\r\n    scroll: {\r\n      inserted: (el, binding) => {\r\n        window.addEventListener(\"scroll\", binding.value);\r\n      },\r\n      unbind: (el, binding) => {\r\n        window.removeEventListener(\"scroll\", binding.value);\r\n      },\r\n    },\r\n    out_click: {\r\n      bind: (el, binding, vnode) => {\r\n        el.clickOutsideEvent = function (event) {\r\n          if (!(el == event.target || el.contains(event.target))) {\r\n            vnode.context[binding.expression](event);\r\n          }\r\n        };\r\n        document.body.addEventListener(\"click\", el.clickOutsideEvent);\r\n      },\r\n      unbind: (el) => {\r\n        document.body.removeEventListener(\"click\", el.clickOutsideEvent);\r\n      },\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.navbar-expand-lg .navbar-nav .nav-link {\r\n  padding: 20px;\r\n  font-size: 20px;\r\n}\r\n.d-1 {\r\n  font-size: 25px;\r\n}\r\n.nav-active {\r\n  color: var(--baseColor);\r\n}\r\n.nav-link:hover {\r\n  color: var(--baseColor);\r\n}\r\n.navbar-toggler:focus {\r\n  box-shadow: none;\r\n}\r\n</style>"],"mappings":"AA2EA;EACAA,KAAA;IACA;MACAC,UAAA;MACAC,YAAA;IACA;EACA;EACAC,QAAA;IACAC,OAAA,WAAAA,CAAA;MACA,YAAAC,MAAA,CAAAC,IAAA;IACA;EACA;EACAC,OAAA;IACAC,aAAA;MACA,IAAAC,MAAA,CAAAC,OAAA;QACA,KAAAT,UAAA;MACA;QACA,KAAAA,UAAA;MACA;IACA;IACAU,aAAA;MACA,KAAAT,YAAA,SAAAA,YAAA;IACA;IACAU,aAAA;MACA,KAAAV,YAAA;IACA;EACA;EACAW,UAAA;IACAC,MAAA;MACAC,QAAA,EAAAA,CAAAC,EAAA,EAAAC,OAAA;QACAR,MAAA,CAAAS,gBAAA,WAAAD,OAAA,CAAAE,KAAA;MACA;MACAC,MAAA,EAAAA,CAAAJ,EAAA,EAAAC,OAAA;QACAR,MAAA,CAAAY,mBAAA,WAAAJ,OAAA,CAAAE,KAAA;MACA;IACA;IACAG,SAAA;MACAC,IAAA,EAAAA,CAAAP,EAAA,EAAAC,OAAA,EAAAO,KAAA;QACAR,EAAA,CAAAS,iBAAA,aAAAC,KAAA;UACA,MAAAV,EAAA,IAAAU,KAAA,CAAAC,MAAA,IAAAX,EAAA,CAAAY,QAAA,CAAAF,KAAA,CAAAC,MAAA;YACAH,KAAA,CAAAK,OAAA,CAAAZ,OAAA,CAAAa,UAAA,EAAAJ,KAAA;UACA;QACA;QACAK,QAAA,CAAAC,IAAA,CAAAd,gBAAA,UAAAF,EAAA,CAAAS,iBAAA;MACA;MACAL,MAAA,EAAAJ,EAAA;QACAe,QAAA,CAAAC,IAAA,CAAAX,mBAAA,UAAAL,EAAA,CAAAS,iBAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}