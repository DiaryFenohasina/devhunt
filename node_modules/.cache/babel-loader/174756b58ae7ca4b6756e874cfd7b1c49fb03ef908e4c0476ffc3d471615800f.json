{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nconst backServer = axios.create({\n  baseURL: `http://127.0.0.1:5000/`\n});\nbackServer.interceptors.request.use(config => {\n  let token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers['Authorization'] = `${token}`;\n  }\n  return config;\n}, error => {\n  this.$router.push('/');\n  return Promise.reject(error);\n});\nconst backServerAdmin = axios.create({\n  baseURL: `http://127.0.0.1:5000/`\n});\nbackServerAdmin.interceptors.request.use(config => {\n  let token = localStorage.getItem(\"token\");\n  let role = localStorage.getItem(\"role\");\n  if (role === \"admin\") {\n    if (token) {\n      config.headers['Authorization'] = `${token}`;\n    }\n  } else {\n    this.$router.push('/');\n  }\n  return config;\n}, error => {\n  this.$router.push('/');\n  return Promise.reject(error);\n});\nexport { backServer, backServerAdmin };","map":{"version":3,"names":["axios","backServer","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","$router","push","Promise","reject","backServerAdmin","role"],"sources":["/home/diary/devHuntNlucah /devHunt/front_DevHunt/src/config/axiosConfig.js"],"sourcesContent":["import axios from 'axios' \n\nconst backServer = axios.create({\n    baseURL: `http://127.0.0.1:5000/`\n})\n\n\nbackServer.interceptors.request.use(config => {\n\n    let token = localStorage.getItem(\"token\")\n\n    if (token){\n        config.headers['Authorization'] = `${token}`\n    }\n    return config\n    }, error => {\n        this.$router.push('/')\n        return Promise.reject(error)\n})\n\nconst backServerAdmin = axios.create({\n    baseURL: `http://127.0.0.1:5000/`\n\n})\n\nbackServerAdmin.interceptors.request.use(config => {\n    let token = localStorage.getItem(\"token\")\n    let role = localStorage.getItem(\"role\")\n    if(role === \"admin\"){\n        if (token){\n            config.headers['Authorization'] = `${token}`\n        }\n    }else{\n        this.$router.push('/')\n    }\n    return config\n    }, error => {\n        this.$router.push('/')\n        return Promise.reject(error) \n})\n\nexport { backServer, backServerAdmin}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,UAAU,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC5BC,OAAO,EAAG;AACd,CAAC,CAAC;AAGFF,UAAU,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EAE1C,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAEzC,IAAIF,KAAK,EAAC;IACND,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAI,GAAEH,KAAM,EAAC;EAChD;EACA,OAAOD,MAAM;AACb,CAAC,EAAEK,KAAK,IAAI;EACR,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;EACtB,OAAOC,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AACpC,CAAC,CAAC;AAEF,MAAMK,eAAe,GAAGjB,KAAK,CAACE,MAAM,CAAC;EACjCC,OAAO,EAAG;AAEd,CAAC,CAAC;AAEFc,eAAe,CAACb,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EAC/C,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACzC,IAAIQ,IAAI,GAAGT,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACvC,IAAGQ,IAAI,KAAK,OAAO,EAAC;IAChB,IAAIV,KAAK,EAAC;MACND,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAI,GAAEH,KAAM,EAAC;IAChD;EACJ,CAAC,MAAI;IACD,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;EAC1B;EACA,OAAOP,MAAM;AACb,CAAC,EAAEK,KAAK,IAAI;EACR,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;EACtB,OAAOC,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AACpC,CAAC,CAAC;AAEF,SAASX,UAAU,EAAEgB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}